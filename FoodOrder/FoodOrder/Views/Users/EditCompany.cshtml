@model FoodOrder.Models.CompanyViewModel
@using FoodOrder.Models


@{
    Layout = "~/Views/Shared/_LayoutSystem.cshtml";
}


    <main>
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">

                    <h1>Редактирование компании</h1>

                    <div class="separator mb-5"></div>

                </div>
            </div>

            <div class="row">

                <div class="col-12 col-lg-6 mb-5">

                    <div class="card mb-4">
                        <div class="card-body">
                            <h5 class="mb-4">Форма редактирования</h5>


                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()
                        <form class="needs-validation tooltip-label-right" novalidate>
                            <div class="form-group position-relative error-l-50">
                                @Html.LabelFor(model => model.Name, "Название компании", htmlAttributes: new { @class = "control-label " })

                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger", required = "required" })
                                <div class="invalid-tooltip">
                                    Заполните название!
                                </div>


                            </div>

                            <div class="form-group position-relative error-l-50">

                                <label>Реквизиты компании</label>
                                <input name="Requisites" type="text" class="form-control" required>
                                <div class="invalid-tooltip">
                                    Заполните реквизиты компании!
                                </div>
                            </div>

                            <div class="form-group position-relative error-l-50">
                                @Html.LabelFor(model => model.Whatsapp, "Группа для Whatsapp")
                                @Html.EditorFor(model => model.Whatsapp, new { htmlAttributes = new { @class = "form-control" } })
                            </div>

                            <div class="form-group position-relative error-l-50">
                                @Html.LabelFor(model => model.Telegram, "Группа для Telegram")
                                @Html.EditorFor(model => model.Telegram, new { htmlAttributes = new { @class = "form-control" } })
                            </div>

                            <div class="form-group position-relative error-l-50">
                                <label>Описание</label>
                                <textarea name="Description" class="form-control" rows="2"></textarea>
                            </div>

                            <div class="form-group position-relative">
                                <label>Способ оплаты</label>
                                <br />
                                <div class="btn-group btn-group-toggle" data-toggle="buttons">
                                    @foreach (TypeOfPayment paymentType in Enum.GetValues(typeof(TypeOfPayment)))
                                    {

                                        if (paymentType == Model.TypeOfPayment)
                                        {
                                            <label class="btn btn-primary active">
                                                <input type="radio" name="TypeOfPayment" value="@paymentType.GetHashCode()" id="@paymentType" checked required>
                                                @paymentType.ToString()
                                            </label>
                                        }
                                        else
                                        {
                                            <label class="btn btn-primary">
                                                <input type="radio" name="TypeOfPayment" value="@paymentType.GetHashCode()" id="@paymentType">
                                                @paymentType.ToString()
                                            </label>
                                        }

                                    }
                                </div>

                                <div class="invalid-tooltip">
                                    Не выбран способ оплаты!
                                </div>
                            </div>

                            <br />

                            <div class="form-group position-relative">
                                <div class="input-group">
                                    <div class="custom-file">
                                        <input type="file" class="custom-file-input" name="CompanyImageFile" value="CompanyImageFile" id="inputGroupFile04">
                                        <label class="custom-file-label" for="inputGroupFile04">Выберите логотип</label>
                                    </div>
                                </div>
                            </div>
                            <br />

                            <div class="form-group position-relative">
                                <div class="custom-control custom-checkbox mb-3 error-l-200">
                                    <div class="checkbox">
                                        <label>@Html.CheckBoxFor(x => Model.UnlimitedOrders)&nbsp;Неограниченные заказы для сотрудников</label>
                                    </div>

                                    @*<input type="checkbox" name="UnlimitedOrders" value="false" class="custom-control-input" id="customControlValidation1">
                @Html.CheckBox("UnlimitedOrders", false, new { @class = "custom-control-input", id = "customControlValidation1" })
                <label class="custom-control-label" for="customControlValidation1">
                    Неограниченные заказы для сотрудников
                </label>*@
                                </div>
                              </div>
                                @Html.HiddenFor(m => m.Id)

                                <div class="form-group">
                                    <div class="col-md-offset-2">

                                        <button type="submit" class="btn btn-primary mb-0">Подтвердить изменения</button>
                                    </div>
                                </div>

                        </form>
                            }
                        </div>
                    </div>
                </div>

            </div>

        </div>
    </main>

